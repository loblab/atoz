<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Type Speed Testing</title>
    <style>
      body {
        background: #242;
        color: #ccc;
        overflow-x: hidden;
        overflow-y: auto;
        text-align: center;
        margin: 20px 10px 10px 10px;
      }
      div {
        border: none;
        margin: 0;
        left: 0px;
      }
      #target {
        text-align: center;
        border-radius: 8px;
        padding-left: 8px;
        padding-right: 8px;
        margin-left: 4px;
        margin-right: 4px;
        font-size: 125%;
        font-family: monospace;
      }
      #target:disabled {
        background: #232;
        color: #eee;
        border: none;
      }
      input[type=button] {
        border-radius: 6px;
        cursor: pointer;
        background: #797;
        border-color: #aaa;
        color: #612;
        font-size: 80%;
        padding: 1px;
      }
      #chart-div {
        margin-left: 18%;
        margin-right: 18%;
      }
      #hit-chart {
        height: 240px !important;
      }
      #main-msg {
        font-size: 180px;
        color: #fdd;
      }
      #rank {
        font-size: 48px;
        color: #ecc;
      }
      #rpt-time {
        font-size: 36px;
      }
      #version {
        font-size: 12px;
        color: #888;
        margin-top: 6px;
      }
    </style>
    <script
      src="https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
      integrity="sha256-t9UJPrESBeG2ojKTIcFLPGF7nHi2vEc7f5A2KpH/UBU="
      crossorigin="anonymous"
    ></script>
    <script>
      const version = "Ver 0.9 by LobLab 11/28/2020";
      var target = "abcdefghijklmnopqrstuvwxyz";
      var inputKeys = "";
      var inputDur = [];
      var prevTs = 0;
      var hitChart = null;

      var keyGroup = ["1qaz", "2wsx", "3edc", "4rfv5tgb",
        "6yhn7ujm", "8ik,", "9ol.", "0p;/", " "];
      var colorGroup = [
          "rgba(180, 99, 112, 0.5)",
          "rgba(205, 99, 112, 0.6)",
          "rgba(230, 99, 112, 0.7)",
          "rgba(255, 99, 112, 0.8)",

          "rgba(112, 99, 255, 0.8)",
          "rgba(112, 99, 230, 0.7)",
          "rgba(112, 99, 205, 0.6)",
          "rgba(112, 99, 185, 0.5)",

          "rgba(99, 99, 99, 0.5)"
      ];
      var keyColor = {};

      function initColor() {
        for (let i = 0; i < keyGroup.length; i++) {
          let str = keyGroup[i];
          let color = colorGroup[i];
          for (let ch of str) {
            keyColor[ch] = color;
          }
        }
        //console.log(keyColor);
      }

      function formatDate(date) {
        var hh = date.getHours();
        var mm = date.getMinutes();
        mm = mm < 10 ? "0" + mm : mm;
        var strTime = hh + ":" + mm;
        var strDate = date.getMonth() + 1 + "/" + date.getDate() + "/" + date.getFullYear();
        return strDate + " " + strTime;
      }

      function initChart() {
        var ctx = document.getElementById("hit-chart").getContext("2d");
        hitChart = new Chart(ctx, {
          type: "bar",
          data: {
            labels: [],
            datasets: [
              {
                data: [],
                backgroundColor: [],
                borderColor: "rgba(128, 128, 128, 1)",
                borderWidth: 1,
              },
            ],
          },
          options: {
            legend: {
              display: false,
            },
            scales: {
              maintainAspectRatio: false,
              xAxes: [
                {
                  ticks: {
                    fontColor: "#ddd",
                    fontSize: 28,
                    fontFamily: "monospace",
                  },
                },
              ],
              yAxes: [
                {
                  ticks: {
                    fontColor: "#999",
                    fontSize: 16,
                    beginAtZero: true,
                  },
                },
              ],
            },
          },
        });
      }

      function saveKey(key, dur) {
        dur = Math.floor(dur); //Safari is float
        inputKeys += key;
        inputDur.push(dur);
        hitChart.data.labels.push(key);
        hitChart.data.datasets.forEach((dataset) => {
          dataset.data.push(dur);
          let color = keyColor[key.toLowerCase()];
          dataset.backgroundColor.push(color);
        });
        hitChart.update();
      }

      function dropKey() {
        inputKeys = inputKeys.substring(inputKeys.length - target.length);
        inputDur.shift();
        hitChart.data.labels.shift();
        hitChart.data.datasets.forEach((dataset) => {
          dataset.data.shift();
          dataset.backgroundColor.shift();
        });
        hitChart.update();
      }

      function resetStatus() {
        inputDur = [];
        inputKeys = "";
        hitChart.data.labels = [];
        hitChart.data.datasets.forEach((dataset) => {
          dataset.data = [];
          dataset.backgroundColor = [];
        });
        hitChart.update();
      }

      function welcome(msg) {
        let delay = 0;
        for (let ch of msg) {
          let val = ch.charCodeAt();
          delay += val;
          setTimeout(function() {
            saveKey(ch, val);
          }, delay);
        }
      }

      function onHitKey(key, ts) {
        $("#main-msg").text(key);
        $("#rpt-time").text("");
        $("#rank").text("");
        if (key == target.charAt(0)) {
          resetStatus();
          saveKey(key, 0);
        } else {
          saveKey(key, ts - prevTs);
          if (inputKeys.length > target.length) {
            dropKey();
          }
        }
        prevTs = ts;
        if (inputKeys == target) {
          report();
        }
      }

      function report() {
        let dur = 0;
        //console.log(inputDur);
        for (let d of inputDur) {
          dur += d;
        }
        dur /= 1000.0;
        let msg = dur.toFixed(2) + "s";
        $("#main-msg").text(msg);
        let now = new Date();
        msg = formatDate(now);
        $("#rpt-time").text(msg);
        saveScore(inputKeys, inputDur);
      }

      function saveScore(keys, score) {
        score.shift();
        let obj = { keys: keys, score: score };
        $.ajax("/api/score", {
          data : JSON.stringify(obj),
          contentType : 'application/json',
          type : 'POST',
          success: function(data) {
            console.log(data);
            let msg = "Rank: " + data.rank + "/" + data.total;
            $("#rank").text(msg);
          }
        });
      }

      $(function () {
        $("#version").text(version);
        $("#target").prop("disabled", true);
        $("#target").val(target);

        //saveScore("abcd", [0, 100, 200, 300]);
        initColor();
        initChart();
        welcome("Type till match Target");

        $("#target").change(function () {
          target = $("#target").val();
        });

        $("#target").focusout(function () {
          $("#target").prop("disabled", true);
          target = $("#target").val();
        });

        $("#change").click(function () {
          $("#target").prop("disabled", false);
          $("#target").select();
        });

        $(window).keypress(function (e) {
          //console.log(e);
          if (e.target.id == "target") {
            if (e.key === 'Enter' || e.keyCode === 13) {
              $("#target").prop("disabled", true);
              $("#target").blur();
              target = $("#target").val();
            }
            return;
          }
          onHitKey(e.key, e.timeStamp);
        });
      });
    </script>
  </head>
  <body>
    Target:
    <input type="text" id="target" name="target" size="28" />
    <input type="button" id="change" name="change" value="Change" />
    <div id="chart-div">
      <canvas id="hit-chart"></canvas>
    </div>
    <div id="main-msg"></div>
    <div id="rank"></div>
    <div id="rpt-time"></div>
    <div id="version"></div>
  </body>
</html>
