<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Typing Speed Test</title>
    <meta name="description" content="Typing speed test online, A to Z, with rank in 10 seconds" />
    <meta
      name="keywords"
      content="Typing test, Typing speed test, Typing speed game, 打字比赛, a to z,
    abcdefghijklmnopqrstuvwxyz, Typing quick test"
    />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      body {
        background: #242;
        color: #ccc;
        overflow-x: hidden;
        overflow-y: auto;
        text-align: center;
        margin: 20px 10px 10px 10px;
        font-size: 3vh;
      }
      div {
        border: none;
        margin: 0;
        left: 0px;
      }
      #target {
        text-align: center;
        border-radius: 8px;
        padding-left: 8px;
        padding-right: 8px;
        margin-left: 4px;
        margin-right: 4px;
        font-size: 3.5vh;
        font-family: monospace;
      }
      #target:disabled {
        background: #232;
        color: #eee;
        border: none;
      }
      input[type="button"] {
        border-radius: 6px;
        cursor: pointer;
        background: #797;
        border-color: #888;
        border-width: 1px;
        color: #612;
        font-size: 2.2vh;
        padding: 2px;
      }
      #hit-chart {
        width: 80vw !important;
        height: 35vh !important;
        min-width: 360px;
        margin: auto;
      }
      #main-msg {
        font-size: 28vh;
        color: #fdd;
      }
      #ext-msg {
        font-size: 7vh;
        color: #ecc;
      }
      #rpt-time {
        font-size: 5.5vh;
      }
      #version {
        font-size: 2.2vh;
        color: #888;
        margin-top: 6px;
      }
    </style>
    <script
      src="https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
      integrity="sha256-t9UJPrESBeG2ojKTIcFLPGF7nHi2vEc7f5A2KpH/UBU="
      crossorigin="anonymous"
    ></script>
    <script>
      const version = "Ver 1.4 by LobLab 12/5/2020";
      const atoz = "abcdefghijklmnopqrstuvwxyz";
      var inputKeys = "";
      var inputDurs = [];
      var prevTs = 0;
      var hitChart = null;
      var latestSeries = 0;
      var recordSeries = 0;

      const keyGroup = ["1qaz", "2wsx", "3edc", "4rfv5tgb", "6yhn7ujm", "8ik,", "9ol.", "0p;/", " "];
      const colorGroup = [
        "rgba(180, 99, 112, 0.5)",
        "rgba(205, 99, 112, 0.6)",
        "rgba(230, 99, 112, 0.7)",
        "rgba(255, 99, 112, 0.8)",

        "rgba(112, 99, 255, 0.8)",
        "rgba(112, 99, 230, 0.7)",
        "rgba(112, 99, 205, 0.6)",
        "rgba(112, 99, 185, 0.5)",

        "rgba(99, 99, 99, 0.5)",
      ];
      var keyColor = {};

      function initColor() {
        for (let i = 0; i < keyGroup.length; i++) {
          let str = keyGroup[i];
          let color = colorGroup[i];
          for (let i = 0; i < str.length; i++) {
            let ch = str[i];
            keyColor[ch] = color;
          }
        }
      }

      function formatDate(date) {
        var hh = date.getHours();
        var mm = date.getMinutes();
        mm = mm < 10 ? "0" + mm : mm;
        var strTime = hh + ":" + mm;
        var strDate = date.getMonth() + 1 + "/" + date.getDate() + "/" + date.getFullYear();
        return strDate + " " + strTime;
      }

      function setAxesFont() {
        let w = $(window).width();
        let h = $(window).height();
        hitChart.options.scales.xAxes[0].ticks.fontSize = Math.min(w / 32, h / 16);
        hitChart.options.scales.yAxes[0].ticks.fontSize = Math.min(w / 48, h / 40);
      }

      function initChart() {
        var ctx = document.getElementById("hit-chart").getContext("2d");
        hitChart = new Chart(ctx, {
          type: "bar",
          data: {
            labels: [],
            datasets: [
              {
                label: "Current",
                data: [],
                backgroundColor: [],
                borderColor: "rgba(128, 128, 128, 1)",
                borderWidth: 1,
              },
              {
                label: "Record",
                type: "line",
                data: [],
                backgroundColor: "rgba(200, 255, 200, 0.8)",
                borderColor: "rgba(255, 255, 255, 1)",
                borderWidth: 1,
              },
              {
                label: "Latest",
                type: "line",
                data: [],
                borderColor: "rgba(255, 255, 255, 1)",
                borderWidth: 2,
              },
            ],
          },
          options: {
            maintainAspectRatio: false,
            legend: {
              display: false,
            },
            scales: {
              xAxes: [
                {
                  ticks: {
                    fontColor: "#ddd",
                    //fontSize: 28,
                    fontFamily: "monospace",
                  },
                },
              ],
              yAxes: [
                {
                  ticks: {
                    fontColor: "#999",
                    //fontSize: 16,
                    beginAtZero: true,
                  },
                },
              ],
            },
          },
        });
        recordSeries = 1;
        latestSeries = 2;
      }

      function saveKey(key, dur) {
        dur = Math.floor(dur); //Safari is float
        inputKeys += key;
        inputDurs.push(dur);
        hitChart.data.labels.push(key);

        let current = hitChart.data.datasets[0];
        current.data.push(dur / 1000.0);
        let color = keyColor[key.toLowerCase()];
        current.backgroundColor.push(color);

        hitChart.update();
      }

      function drawSeries(index, data) {
        let dset = hitChart.data.datasets[index].data;
        dset.push(0);
        for (let i = 0; i < data.length; i++) {
          dset.push(data[i] / 1000.0);
        }
        hitChart.update();
      }

      function dropKey() {
        inputKeys = inputKeys.substring(inputKeys.length - target.length);
        inputDurs.shift();
        hitChart.data.labels.shift();
        let current = hitChart.data.datasets[0];
        current.data.shift();
        current.backgroundColor.shift();
        hitChart.update();
      }

      function resetStatus() {
        inputDurs = [];
        inputKeys = "";
        hitChart.data.labels = [];
        let dss = hitChart.data.datasets;
        dss[0].backgroundColor = [];
        dss[0].data = [];
        dss[1].data = [];
        dss[2].data = [];
        hitChart.update();
      }

      function welcome(msg) {
        let delay = 0;
        for (let i = 0; i < msg.length; i++) {
          let ch = msg[i];
          let val = ch.charCodeAt();
          delay += val;
          setTimeout(function () {
            saveKey(ch, val);
          }, delay);
        }
      }

      function onHitKey(key, ts) {
        $("#main-msg").text(key);
        $("#rpt-time").text("");
        $("#ext-msg").text("");
        if (key == target.charAt(0)) {
          resetStatus();
          saveKey(key, 0);
        } else {
          saveKey(key, ts - prevTs);
          if (inputKeys.length > target.length) {
            dropKey();
          }
        }
        prevTs = ts;
        if (inputKeys == target) {
          report();
        }
      }

      function report() {
        let dur = 0;
        for (let i = 0; i < inputDurs.length; i++) {
          dur += inputDurs[i];
        }
        dur /= 1000.0;
        let msg = dur.toFixed(2) + "s";
        $("#main-msg").text(msg);
        let now = new Date();
        msg = formatDate(now);
        $("#rpt-time").text(msg);
        saveScore(inputKeys, inputDurs);
      }

      function saveScore(keys, durs) {
        durs.shift();
        let obj = { keys: keys, durs: durs };
        $.ajax("/api/score", {
          data: JSON.stringify(obj),
          contentType: "application/json",
          type: "POST",
          success: function (data) {
            let msg = "Rank: " + data.rank + "/" + data.samples;
            let dur = 0;
            if (data.record) {
              let rec = data.record;
              drawSeries(recordSeries, rec);
              for (let i = 0; i < rec.length; i++) {
                dur += rec[i];
              }
            }
            if (data.latest) {
              drawSeries(latestSeries, data.latest);
            }
            if (dur) {
              msg += " (Record: " + (dur / 1000.0).toFixed(2) + "s)";
            }
            $("#ext-msg").text(msg);
          },
        });
      }

      function resizeInput() {
        let s = $(this).val().length;
        if (s < 2) s = 2;
        $(this).attr('size', s);
      }

      $(function () {
        let mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        let hello1, hello2;
        if (mobile) {
          target = "Run on PC";
          hello1 = "Run on PC";
          hello2 = "电脑上玩";
        } else {
          target = atoz;
          hello1 = "Type till match Target";
          hello2 = "直接击键";
        }

        $("#version").text(version);
        $("#target").prop("disabled", true);
        $("#target").val(target);
        $("#ext-msg").text(hello2);

        initColor();
        initChart();
        setAxesFont();
        welcome(hello1);

        $(window).keypress(function (e) {
          if (e.target.id == "target") {
            if (e.key === "Enter" || e.keyCode === 13) {
              $("#target").prop("disabled", true);
              $("#target").blur();
              target = $("#target").val();
            }
            return;
          }
          onHitKey(e.key, e.timeStamp);
        });

        $(window).resize(setAxesFont);

        $('input[type="text"]')
          // event handler
          .keyup(resizeInput)
          // resize on page load
          .each(resizeInput);

        $("#target").change(function () {
          target = $("#target").val();
        });

        $("#target").focusout(function () {
          $("#target").prop("disabled", true);
          target = $("#target").val();
        });

        $("#change").click(function () {
          $("#target").prop("disabled", false);
          $("#target").select();
        });

      });
    </script>
  </head>
  <body>
    <div>
      Target:
      <input type="text" id="target" name="target" />
      <input type="button" id="change" name="change" value="Change" />
    </div>
    <div>
      <canvas id="hit-chart"></canvas>
    </div>
    <div id="main-msg"></div>
    <div id="ext-msg"></div>
    <div id="rpt-time"></div>
    <div id="version"></div>
  </body>
</html>
